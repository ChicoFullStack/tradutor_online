# nginx.conf

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # --- Servidor para o Frontend (Next.js) ---
    server {
        listen 80;
        server_name tradutor.boloko.shop;
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name tradutor.boloko.shop;

        ssl_certificate /etc/letsencrypt/live/tradutor.boloko.shop/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/tradutor.boloko.shop/privkey.pem;

        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # --- Servidor para o Backend (Python/FastAPI) ---
    server {
        listen 80;
        server_name boloko.cloud;
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name boloko.cloud;

        ssl_certificate /etc/letsencrypt/live/boloko.cloud/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/boloko.cloud/privkey.pem;

        # Localização para as ligações WebSocket
        location /ws/ {
            proxy_pass http://backend:8000/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        # (Opcional) Pode adicionar uma localização / para o backend
        # para verificar se está a correr (ex: mostrar uma mensagem "Backend is running").
        location / {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
        }
    }
}
