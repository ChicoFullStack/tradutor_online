worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # --- Redirecionamento HTTP para HTTPS (interno, opcional) ---
    server {
        listen 8080;
        server_name tradutor.boloko.shop boloko.cloud;

        location / {
            return 301 https://$host:8443$request_uri;
        }
    }

    # --- Frontend (Next.js) com HTTP em 8080 ---
    server {
        listen 8080;
        server_name tradutor.boloko.shop;

        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # --- Backend (FastAPI com WebSocket) usando HTTPS na porta 8443 ---
    server {
        listen 8443 ssl http2;
        server_name boloko.cloud;

        ssl_certificate /etc/letsencrypt/live/boloko.cloud/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/boloko.cloud/privkey.pem;

        access_log /var/log/nginx/backend.access.log;
        error_log /var/log/nginx/backend.error.log;

        location /ws/ {
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        location / {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
