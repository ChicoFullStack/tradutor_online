# nginx.conf

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # --- Servidor para o Frontend (Next.js) ---
    # Este bloco lida com o seu domínio do frontend.
    # Certifique-se de que o server_name e os caminhos SSL estão corretos.
    server {
        listen 80;
        server_name tradutor.boloko.shop;
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 8081 ssl http2; # Adicionado http2 para melhor performance
        server_name tradutor.boloko.shop;

        ssl_certificate /etc/letsencrypt/live/tradutor.boloko.shop/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/tradutor.boloko.shop/privkey.pem;

        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # --- Servidor para o Backend (Python/FastAPI) ---
    # Este bloco lida com o seu domínio do backend.
    server {
        listen 8443;
        server_name boloko.cloud;
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        server_name boloko.cloud;

        ssl_certificate /etc/letsencrypt/live/boloko.cloud/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/boloko.cloud/privkey.pem;

        # Adiciona logging para ajudar no diagnóstico.
        # Depois do deploy, verifique estes ficheiros no seu servidor para encontrar erros.
        access_log /var/log/nginx/backend.access.log;
        error_log /var/log/nginx/backend.error.log;

        # Localização para as ligações WebSocket
        location /ws/ {
            proxy_pass http://backend:8000/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            
            # Adiciona mais cabeçalhos para garantir que a informação do cliente é passada
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Aumenta os timeouts para ligações longas como WebSockets
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # (Opcional) Pode adicionar uma localização / para o backend
        # para verificar se está a correr (ex: mostrar uma mensagem "Backend is running").
        location / {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
